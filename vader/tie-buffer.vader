Execute perl (setup):
  use VIMx;
  use warnings;
  use strict;

Before:
  unlet! b:eep b:oop b:scratch

Execute perl (bufnr() agrees -- 0+ overloading):
  $b{eep} = 0+$BUFFER

Then:
  AssertEqual b:eep, bufnr('')

Execute perl (bufname() agrees -- "" overloading):
  $b{eep} = "$BUFFER"

Then:
  AssertEqual b:eep, bufname('')

Execute perl (numeric overload):
  $b{eep} = 0+$VIMx::BUFFER

Then:
  AssertEqual b:eep, bufnr('')

Execute (vars - get):
  let b:eep = 'Rainbow Dash'
  perl $b{oop} = $BUFFER->vars->{eep}
  AssertEqual b:oop, b:eep

Execute (vars - set):
  let b:eep = 'Rainbow Dash'
  perl $BUFFER->vars->{oop} = $b{eep}
  AssertEqual b:oop, b:eep

Execute (info):
  if !has('patch-7.4.2204') | finish | endif
  perl $b{eep} = $BUFFER->info;
  Log b:eep
  " TODO a test, bitte

Given (one pony):
  Rainbow Dash

Execute perl (whole-buffer):
  $b{eep} = [ @$VIMx::BUFFER ]

Then (whole-buffer):
  AssertEqual [
    \ 'Rainbow Dash',
    \], b:eep

Given (mane six):
  Twilight Sparkle
  Rainbow Dash
  Applejack
  Fluttershy
  Rarity
  Pinkie Pie

Execute perl (whole-buffer):
  $b{eep} = [ @$VIMx::BUFFER ]

Then (whole-buffer):
  AssertEqual [
    \ 'Twilight Sparkle',
    \ 'Rainbow Dash',
    \ 'Applejack',
    \ 'Fluttershy',
    \ 'Rarity',
    \ 'Pinkie Pie',
    \], b:eep

Execute perl (append / push):
  push @$VIMx::BUFFER, 'spike!'

Expect (ponies and company):
  Twilight Sparkle
  Rainbow Dash
  Applejack
  Fluttershy
  Rarity
  Pinkie Pie
  spike!

Execute perl (set / replace):
  $VIMx::BUFFER->[2] = 'spiky!'

Expect (ponies and company):
  Twilight Sparkle
  Rainbow Dash
  spiky!
  Fluttershy
  Rarity
  Pinkie Pie

Execute perl (pop):
  $VIMx::b{scratch} = pop @$VIMx::BUFFER

Then (pop):
  AssertEqual 'Pinkie Pie', b:scratch

Expect (popped):
  Twilight Sparkle
  Rainbow Dash
  Applejack
  Fluttershy
  Rarity

Execute perl (delete):
  $VIMx::b{scratch} = delete $VIMx::BUFFER->[3]

Then (delete):
  AssertEqual 'Fluttershy', b:scratch

Expect (delete):
  Twilight Sparkle
  Rainbow Dash
  Applejack
  Rarity
  Pinkie Pie

Execute perl (shift):
  $VIMx::b{scratch} = shift @$VIMx::BUFFER

Then (shift):
  AssertEqual 'Twilight Sparkle', b:scratch

Expect (shift):
  Rainbow Dash
  Applejack
  Fluttershy
  Rarity
  Pinkie Pie

Execute perl (unshift):
  unshift @$VIMx::BUFFER, 'Princess Celestia'

Expect (unshift):
  Princess Celestia
  Twilight Sparkle
  Rainbow Dash
  Applejack
  Fluttershy
  Rarity
  Pinkie Pie

Execute perl (multiple unshift):
  unshift @$VIMx::BUFFER, 'Princess Celestia', 'Princess Luna'

Expect (multiple unshift):
  Princess Celestia
  Princess Luna
  Twilight Sparkle
  Rainbow Dash
  Applejack
  Fluttershy
  Rarity
  Pinkie Pie

Execute perl (blessed overload):
  $VIMx::b{eep} = $VIMx::BUFFER->Count;
  $VIMx::BUFFER->Append(0, 'Nightmare Moon');

Expect (autoloading blessed tie nightmare):
  Nightmare Moon
  Twilight Sparkle
  Rainbow Dash
  Applejack
  Fluttershy
  Rarity
  Pinkie Pie

Execute perl (wipe):
  @$BUFFER = ()

" cannot have 0-length buffer
Expect:
  

Execute perl (wipe-and-replace):
  @$BUFFER = ( 'Appledash', 'Rarijack', 'Dashdash' )

Expect:
  Appledash
  Rarijack
  Dashdash

Execute perl (wipe and push):
  @$BUFFER = ();
  push @$BUFFER, ( 'Appledash', 'Rarijack', 'Dashdash' );

Expect:
  Appledash
  Rarijack
  Dashdash

Execute perl (wipe-and-replace -- large):
  @$BUFFER = ( ('Dashdash') x 500 )

Expect:
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash
  Dashdash

" FIXME ... yeah, lots more to do


" __END__
