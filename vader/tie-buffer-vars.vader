Execute (setup):
  perl require VIMx; require VIMx::Tie::BufferVars;

Given:

Before:
  unlet! b:eep b:var b:var_exists
  let b:ours = bufnr('')
  perl tie our %vars, 'VIMx::Tie::BufferVars', $b{ours}

Execute(EXISTS):
  let b:eep = 'Rainbow Dash'
  perl $b{var_exists} = exists $vars{eep}
  Assert b:var_exists

Execute(not EXISTS):
  perl $b{var_exists} = exists $vars{eep}
  Assert !b:var_exists

Execute(FETCH):
  let b:eep = 'Rainbow Dash'
  perl $b{var} = $vars{eep}
  AssertEqual b:var, 'Rainbow Dash'

Execute(FETCH dne):
  perl $b{var} = not defined $vars{eep}
  Assert b:var

Execute(STORE):
  perl $b{var} = $vars{eep} = 'Rainbow Dash'
  AssertEqual b:var, 'Rainbow Dash'
  AssertEqual b:eep, 'Rainbow Dash'

Execute(KEYS spew):
  perl $b{eep} = [ keys %vars ]
  Log b:eep

Execute perl:
  $b{eep} = scalar %vars;

Then (SCALAR):
  " -1 as we're creating a new entry with the assignment to $b{eep}
  AssertEqual len(keys(b:))-1, b:eep

" __END__
